server:
  address:     ":8000"
  openapiPath: "/api.json"
  swaggerPath: "/swagger"

# 数据库配置
database:
  default:
  - link: "mysql:root:@tcp(127.0.0.1:3306)/liteflow"
    debug: true
    charset: "utf8mb4"
    maxIdle: 10
    maxOpen: 100
    maxLifetime: "30s"

logger:
  path:                  "./var/log/"           # 日志文件路径。默认为空，表示关闭，仅输出到终端
  file:                  "{Y-m-d}.log"         # 日志文件格式。默认为"{Y-m-d}.log"
  prefix:                "liteflow"            # 日志内容输出前缀。默认为空
  level:                 "all"                 # 日志输出级别
  timeFormat:            "2006-01-02T15:04:05" # 自定义日志输出的时间格式，使用Golang标准的时间格式配置
  ctxKeys:               []                    # 自定义Context上下文变量名称，自动打印Context的变量到日志中。默认为空
  header:                true                  # 是否打印日志的头信息。默认true
  stdout:                true                  # 日志是否同时输出到终端。默认true
  rotateSize:            100                     # 按照日志文件大小对文件进行滚动切分。默认为0，表示关闭滚动切分特性
  rotateExpire:          24                     # 按照日志文件时间间隔对文件滚动切分。默认为0，表示关闭滚动切分特性
  rotateBackupLimit:     5                     # 按照切分的文件数量清理切分文件，当滚动切分特性开启时有效。默认为0，表示不备份，切分则删除
  rotateBackupExpire:    0                     # 按照切分的文件有效期清理切分文件，当滚动切分特性开启时有效。默认为0，表示不备份，切分则删除
  rotateBackupCompress:  0                     # 滚动切分文件的压缩比（0-9）。默认为0，表示不压缩
  rotateCheckInterval:   "1h"                  # 滚动切分的时间检测间隔，一般不需要设置。默认为1小时
  stdoutColorDisabled:   true                 # 关闭终端的颜色打印。默认开启
  writerColorEnable:     true                 # 日志文件是否带上颜色。默认false，表示不带颜色

# 应用配置文件
# 定时任务配置
cron:
  cleanup:
    # 是否启用定时清理任务
    enable: true
    # 是否在启动时立即执行一次清理任务
    runOnStartup: true
    # cron表达式，默认每天凌晨2点执行
    # 格式：秒 分 时 日 月 周
    # 示例：
    # "0 0 2 * * *" - 每天凌晨2点
    # "0 0 */6 * * *" - 每6小时执行一次
    # "0 0 0 * * 0" - 每周日凌晨执行
    expression: "0 0 2 * * *"
    # 清理任务执行超时时间（秒）
    timeout: 300